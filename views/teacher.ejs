<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Teacher Dashboard | T.Nestia</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <script src="https://unpkg.com/lucide@latest"></script>
  <style>
    :root{
      --bg-dark:#0f1218;--bg-card:#171a24;--bg-elev:#1e2230;--bg-input:#23283a;
      --text:#f3f6fc;--muted:#a5adbb;--line:#2a3145;
      --accent:#4ea1ff;--accent-2:#7dd3fc;--accent-hover:#3583d4;--danger:#f87171;--success:#22c55e;
      --radius:14px;--radius-sm:10px;--shadow:0 8px 30px rgba(0,0,0,.35);
    }
    *{box-sizing:border-box}
    body{margin:0;font-family:Inter,Segoe UI,system-ui,-apple-system,sans-serif;background:linear-gradient(180deg,#0c0f14 0%,#111520 100%);color:var(--text)}
    /* Header */
    header{
      position:sticky;top:0;z-index:1000;display:flex;align-items:center;justify-content:space-between;
      padding:14px 18px;background:rgba(18,22,33,.75);backdrop-filter:saturate(160%) blur(10px);
      border-bottom:1px solid var(--line)
    }
    header h2{margin:0;font-size:18px;font-weight:600}
    header .user{font-size:13.5px;color:var(--muted)}
    header button{background:transparent;border:1px solid var(--line);border-radius:10px;color:var(--text);font-size:18px;cursor:pointer;padding:8px;display:grid;place-items:center}
    header button:hover{border-color:#32405a}

    /* Sidebar */
    .sidebar{
      width:270px;background:linear-gradient(180deg,#141823 0%,#141824 100%);
      height:100vh;position:fixed;top:0;left:-280px;transition:left .28s ease; padding:20px 16px 16px;
      box-shadow:16px 0 40px rgba(0,0,0,.45);z-index:999;display:flex;flex-direction:column;border-right:1px solid var(--line)
    }
    .sidebar.show{left:0}
    .sidebar h2{font-size:17px;margin:2px 10px 16px}
    .menu-btn{
      display:flex;align-items:center;gap:10px;padding:11px 12px;border-radius:12px;cursor:pointer;margin:4px 6px;
      transition:background .18s ease,color .18s ease;color:#dbe6ffbf
    }
    .menu-btn:hover{background:#1d2230}
    .menu-btn.active{background:linear-gradient(90deg,rgba(78,161,255,.25),rgba(125,211,252,.18));color:#fff;border:1px solid rgba(78,161,255,.35)}
    .logout-btn{
      margin-top:auto;background:var(--danger);border:none;padding:12px 12px;border-radius:12px;color:white;cursor:pointer;
      font-weight:600;box-shadow:0 8px 24px rgba(248,113,113,.25)
    }

    main{padding:22px;max-width:1200px;margin:18px auto}

    /* Sections */
    .section{display:none;animation:fadeIn .25s ease}
    .section.active{display:block}
    @keyframes fadeIn{from{opacity:0;transform:translateY(6px)}to{opacity:1;transform:none}}

    /* Stat grid */
    .grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(220px,1fr));gap:16px}
    .stat-card{
      background:linear-gradient(180deg,#192031 0%,#171c2a 100%);border:1px solid var(--line);
      border-radius:var(--radius);padding:18px;box-shadow:var(--shadow);cursor:pointer;transition:transform .15s ease,box-shadow .15s ease
    }
    .stat-card:hover{transform:translateY(-3px);box-shadow:0 12px 40px rgba(0,0,0,.45)}
    .stat-card h3{margin:0 0 4px;font-size:22px}
    .stat-card p{margin:0;color:var(--muted)}

    /* Card */
    .card{
      background:linear-gradient(180deg,#151a26 0%,#141925 100%);border:1px solid var(--line);
      border-radius:var(--radius);padding:18px;margin-bottom:20px;box-shadow:var(--shadow)
    }
    .card h3{margin:0 0 12px;display:flex;align-items:center;gap:8px;font-size:18px}

    /* Buttons */
    .btn{
      appearance:none;background:linear-gradient(180deg,var(--accent) 0%,#3a8fe0 100%);
      color:white;border:none;border-radius:12px;padding:10px 16px;cursor:pointer;font-weight:600;letter-spacing:.2px;
      transition:transform .12s ease,box-shadow .12s ease
    }
    .btn:hover{transform:translateY(-2px)}
    .btn-ghost{
      background:transparent;border:1px dashed #394660;color:#d6e3ff;border-radius:12px;padding:10px 14px;font-weight:600
    }

    /* Inputs */
    .field{display:flex;flex-direction:column;gap:6px;margin:10px 0}
    .label{font-size:13px;color:var(--muted)}
    input, textarea{
      width:100%;padding:12px 12px;border-radius:12px;border:1px solid #2a3348;background:var(--bg-input);
      color:#fff;font-size:14px;outline:none;transition:border-color .15s ease, box-shadow .15s ease
    }
    textarea{min-height:110px;resize:vertical}
    input:focus, textarea:focus{border-color:#3b82f6;box-shadow:0 0 0 3px rgba(62,132,255,.15)}

    /* Date input nicer */
    input[type="date"]::-webkit-calendar-picker-indicator{filter:invert(1) brightness(1.2)}
    input[type="date"]{letter-spacing:.2px}

    /* File picker (custom) */
    .upload-box{display:flex;flex-wrap:wrap;gap:10px;align-items:center}
    .filepicker{
      position:relative;display:flex;align-items:center;gap:10px;border:1px solid #2a3348;background:var(--bg-input);
      padding:12px 14px;border-radius:12px;cursor:pointer;font-weight:600;color:#dbe6ffbf;min-width:260px
    }
    .filepicker input[type="file"]{position:absolute;inset:0;opacity:0;cursor:pointer}
    .file-name{color:#e5edff}
    .hint{font-size:12px;color:var(--muted);margin-top:6px}

    /* Tables */
    table{width:100%;border-collapse:collapse;border-radius:12px;overflow:hidden}
    thead th{
      background:#182034;color:#bfc7d9;font-weight:600;text-transform:uppercase;font-size:12px;letter-spacing:.4px;border-bottom:1px solid var(--line)
    }
    th,td{padding:12px;border-bottom:1px solid var(--line)}
    tbody tr:hover{background:#171e2e}

    .badge{padding:4px 8px;border-radius:999px;font-size:12px;background:#26314a;color:#cfe3ff;border:1px solid #334163}

    /* List items & empty states */
    .list-item{background:#1a2133;border:1px solid var(--line);border-radius:12px;padding:12px;margin:8px 0}
    .empty{
      display:flex;flex-direction:column;align-items:center;justify-content:center;gap:6px;
      padding:28px;border:2px dashed #2c3853;border-radius:16px;color:#c2cee8;background:#141a29
    }
    .empty small{color:var(--muted)}
    .skeleton{height:14px;border-radius:6px;background:linear-gradient(90deg,#22293c, #2a3450, #22293c);background-size:200% 100%;animation:shimmer 1.3s infinite}
    @keyframes shimmer{0%{background-position:200% 0}100%{background-position:-200% 0}}

    /* Utility */
    .row{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:12px}
  </style>
</head>
<body>
  <!-- Sidebar -->
  <nav class="sidebar" id="sidebar">
    <h2>üë®‚Äçüè´ <%= username %></h2>
    <div class="menu-btn active" onclick="showSection('dashboard', this)"><i data-lucide="layout-dashboard"></i> Dashboard</div>
    <div class="menu-btn" onclick="showSection('files', this)"><i data-lucide="folder"></i> Files</div>
    <div class="menu-btn" onclick="showSection('assignments', this)"><i data-lucide="clipboard-list"></i> Assignments</div>
    <div class="menu-btn" onclick="showSection('announcements', this)"><i data-lucide="megaphone"></i> Announcements</div>
    <div class="menu-btn" onclick="showSection('students', this)"><i data-lucide="users"></i> Students</div>
    <div class="menu-btn" onclick="showSection('messages', this)"><i data-lucide="mail"></i> Messages</div>
    <div class="menu-btn" onclick="showSection('settings', this)"><i data-lucide="settings"></i> Settings</div>
    <button class="logout-btn" onclick="location.href='/'"><i data-lucide="log-out"></i> Logout</button>
  </nav>

  <!-- Header -->
  <header>
    <button onclick="toggleSidebar()" aria-label="Open menu"><i data-lucide="menu"></i></button>
    <h2>Hello, <%= username %> üëã</h2>
    <div class="user">Role: Teacher ‚Ä¢ Empowering minds every day</div>
  </header>

  <!-- Main -->
  <main>
    <!-- Dashboard -->
    <section id="dashboard" class="section active">
      <h2 style="margin:6px 0 14px">üìä Dashboard Overview</h2>
      <div class="grid">
        <div class="stat-card" onclick="showSection('files')"><h3>üìÇ Files</h3><p>Manage and share materials</p></div>
        <div class="stat-card" onclick="showSection('assignments')"><h3>üìù Assignments</h3><p>Create & track progress</p></div>
        <div class="stat-card" onclick="showSection('announcements')"><h3>üì¢ Announcements</h3><p>Keep everyone informed</p></div>
        <div class="stat-card" onclick="showSection('students')"><h3>üë©‚Äçüéì Students</h3><p>Roster & status</p></div>
        <div class="stat-card" onclick="showSection('messages')"><h3>üí¨ Messages</h3><p>Student communication</p></div>
        <div class="stat-card" onclick="showSection('settings')"><h3>‚öôÔ∏è Settings</h3><p>Personalize preferences</p></div>
      </div>
    </section>

    <!-- Files -->
    <section id="files" class="section">
      <div class="card">
        <h3><i data-lucide="upload-cloud"></i> Upload Material</h3>

        <!-- Modern file picker -->
        <div class="upload-box">
          <label class="filepicker" for="fileInput" id="filePickerLabel">
            <i data-lucide="paperclip"></i>
            <span class="file-name" id="fileName">Choose a file‚Ä¶</span>
            <input id="fileInput" type="file" />
          </label>
          <button class="btn" id="uploadBtn" onclick="submitUpload()">
            <i data-lucide="arrow-up-circle"></i> Upload
          </button>
          <button class="btn-ghost" type="button" onclick="loadFiles()">
            <i data-lucide="refresh-cw"></i> Refresh
          </button>
        </div>
        <div class="hint">Accepted: any type supported by your server. Max size depends on server settings.</div>

        <p id="uploadMsg" aria-live="polite" style="margin-top:8px;color:#cfe3ff"></p>
      </div>

      <div class="card">
        <h3><i data-lucide="files"></i> Shared Files</h3>
        <div id="files-list"></div>
      </div>
    </section>

    <!-- Assignments -->
    <section id="assignments" class="section">
      <div class="card">
        <h3><i data-lucide="clipboard-list"></i> Assignments</h3>
        <div class="row">
          <div class="field">
            <div class="label">Title</div>
            <input id="assignTitle" type="text" placeholder="e.g. Algebra Worksheet 02" />
          </div>
          <div class="field">
            <div class="label">Deadline</div>
            <input id="assignDeadline" type="date" />
          </div>
        </div>
        <div class="field">
          <div class="label">Description</div>
          <textarea id="assignDesc" placeholder="Instructions, resources, and grading notes‚Ä¶"></textarea>
        </div>
        <button class="btn" onclick="createAssignment()"><i data-lucide="plus-circle"></i> Create Assignment</button>
        <div id="assignment-list" style="margin-top:14px"></div>
      </div>
      <div class="card">
  <h3><i data-lucide="inbox"></i> Submitted Assignments</h3>
 
  <table>
    <thead>
      <tr>
        <th>Student</th>
        <th>Email</th>
        <th>Assignment</th>
        <th>Submitted At</th>
        <th style="text-align:right">File</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Md. Shahriar Rahman</td>
        <td>shahriar@student.com</td>
        <td>Algebra Worksheet 01</td>
        <td>2025-09-05 10:30 AM</td>
        <td style="text-align:right">
          <a href="/uploads/dummy1.jpg" class="btn-ghost" target="_blank">
            <i data-lucide="download"></i> Download
          </a>
        </td>
      </tr>
      <tr>
        <td>Mst. Ayesha Shiddika Nisu</td>
        <td>ayesha@student.com</td>
        <td>Physics Lab Report</td>
        <td>2025-09-04 03:15 PM</td>
        <td style="text-align:right">
          <a href="/uploads/dummy2.jpg" class="btn-ghost" target="_blank">
            <i data-lucide="download"></i> Download
          </a>
        </td>
      </tr>
      <tr>
        <td>Rafi Ahmed</td>
        <td>rafi@student.com</td>
        <td>Chemistry Assignment</td>
        <td>2025-09-03 09:45 AM</td>
        <td style="text-align:right">
          <a href="/uploads/dummy3.jpg" class="btn-ghost" target="_blank">
            <i data-lucide="download"></i> Download
          </a>
        </td>
      </tr>
    </tbody>
  </table>
</div>

    <div class="empty">
      <i data-lucide="inbox"></i>
      <div>Loading submissions‚Ä¶</div>
      <small>Students' submissions will appear here.</small>
    </div>
  </div>
</div>
</div>



    </section>

    <!-- Announcements -->
    <section id="announcements" class="section">
      <div class="card">
        <h3><i data-lucide="megaphone"></i> Announcements</h3>
        <div class="field">
          <div class="label">Message</div>
          <textarea id="announcementText" placeholder="Write an announcement for your class‚Ä¶"></textarea>
        </div>
        <button class="btn" onclick="postAnnouncement()"><i data-lucide="send"></i> Post</button>
        <div id="announcement-list" style="margin-top:14px"></div>
      </div>
    </section>

    <!-- Students -->
    <section id="students" class="section">
      <div class="card">
        <h3><i data-lucide="users"></i> My Students</h3>
        <table>
          <thead><tr><th>Name</th><th>Email</th><th>Status</th></tr></thead>
          <tbody>
            <tr><td>Rafi</td><td>rafi@example.com</td><td><span class="badge">Active</span></td></tr>
            <tr><td>Ayan</td><td>ayan@example.com</td><td><span class="badge">Active</span></td></tr>
            <tr><td>Sadia</td><td>sadia@example.com</td><td><span class="badge">Inactive</span></td></tr>
          </tbody>
        </table>
      </div>
    </section>

    <!-- Messages -->
    <section id="messages" class="section">
      <div class="card">
        <h3><i data-lucide="mail"></i> Messages</h3>
        <p class="empty"><i data-lucide="inbox"></i> No new messages right now. <small>Stay tuned!</small></p>
      </div>
    </section>

    <!-- Settings -->
    <section id="settings" class="section">
      <div class="card">
        <h3><i data-lucide="settings"></i> Preferences</h3>
        <label style="display:flex;align-items:center;gap:10px;margin:8px 0">
          <input type="checkbox" /> Dark Mode
        </label>
        <label style="display:flex;align-items:center;gap:10px;margin:8px 0">
          <input type="checkbox" /> Email Notifications
        </label>
      </div>
    </section>
  </main>

  <script>
    // Icon render helper
    function refreshIcons(){ try{ lucide.createIcons(); }catch(e){} }
    refreshIcons();

    /* Sidebar toggle ‚Äî unchanged logic */
    function toggleSidebar() {
      document.getElementById("sidebar").classList.toggle("show");
    }
    document.addEventListener("click", (e) => {
      const sidebar = document.getElementById("sidebar");
      const headerBtn = document.querySelector("header button");
      if (sidebar.classList.contains("show") && !sidebar.contains(e.target) && !headerBtn.contains(e.target)) {
        sidebar.classList.remove("show");
      }
    });

    /* Section switcher ‚Äî unchanged logic */
    function showSection(id, btn) {
      document.querySelectorAll(".section").forEach(s => s.classList.remove("active"));
      document.getElementById(id).classList.add("active");
      document.querySelectorAll(".menu-btn").forEach(b => b.classList.remove("active"));
      if (btn) btn.classList.add("active");
      document.getElementById("sidebar").classList.remove("show");
    }

    // Enhance file picker label (UI only, logic untouched)
    const fileInput = document.getElementById("fileInput");
    const fileNameEl = document.getElementById("fileName");
    if (fileInput) {
      fileInput.addEventListener("change", () => {
        fileNameEl.textContent = fileInput.files[0] ? fileInput.files[0].name : "Choose a file‚Ä¶";
      });
    }

    /* ---------- File upload logic (unchanged) ---------- */
    async function submitUpload() {
      const inp = document.getElementById("fileInput");
      const msg = document.getElementById("uploadMsg");
      const btn = document.getElementById("uploadBtn");
      if (!inp.files[0]) return alert("Pick a file first");

      const fd = new FormData();
      fd.append("file", inp.files[0]);

      btn.disabled = true; msg.textContent = "Uploading...";
      try {
        const res = await fetch("/uploads", { method:"POST", body: fd });
        const data = await res.json();
        if (!res.ok) throw new Error(data.error || "Upload failed");
        msg.textContent = "‚úÖ Uploaded: " + data.file.originalName;
        inp.value = ""; fileNameEl.textContent = "Choose a file‚Ä¶";
        loadFiles();
      } catch { msg.textContent = "‚ùå Upload failed"; }
      finally { btn.disabled = false; }
    }

    async function loadFiles() {
      const wrap = document.getElementById("files-list");
      // Skeleton loader (UI only)
      wrap.innerHTML = `
        <div class="skeleton" style="width:42%"></div>
        <div class="skeleton" style="width:70%;margin-top:10px"></div>
        <div class="skeleton" style="width:58%;margin-top:10px"></div>
      `;
      try {
        const res = await fetch("/uploads/files");
        const list = await res.json();

        if (!Array.isArray(list) || list.length === 0) {
          wrap.innerHTML = `
            <div class="empty">
              <i data-lucide="folder-open"></i>
              <div>No files yet</div>
              <small>Upload class notes or resources to get started.</small>
            </div>`;
          refreshIcons();
          return;
        }

        let html = `
          <table>
            <thead>
              <tr><th>File</th><th>By</th><th>When</th><th style="text-align:right">Actions</th></tr>
            </thead><tbody>`;
        list.forEach(f => {
          html += `
            <tr>
              <td><a href="${f.url}" target="_blank" style="color:#cfe3ff;text-decoration:none">
                <i data-lucide="file"></i> ${f.originalName}
              </a></td>
              <td>${f.uploadedByName}</td>
              <td>${new Date(f.uploadedAt).toLocaleString()}</td>
              <td style="text-align:right">
                <a href="/uploads/download/${f.id}" class="btn-ghost" style="text-decoration:none">
                  <i data-lucide="download"></i> Download
                </a>
              </td>
            </tr>`;
        });
        html += "</tbody></table>";
        wrap.innerHTML = html;
        refreshIcons();
      } catch {
        wrap.innerHTML = `<p class="empty"><i data-lucide="alert-triangle"></i> Failed to load files</p>`;
        refreshIcons();
      }
    }

    /* ---------- Assignments (logic unchanged) ---------- */
    async function createAssignment() {
      const title = document.getElementById("assignTitle").value.trim();
      const deadline = document.getElementById("assignDeadline").value;
      const desc = document.getElementById("assignDesc").value.trim();
      if (!title || !deadline) return alert("Title and deadline required");
      try {
        const res = await fetch("/assignments", {
          method:"POST", headers:{ "Content-Type":"application/json" },
          body: JSON.stringify({ title, deadline, description: desc })
        });
        await res.json(); loadAssignments();
      } catch { alert("‚ùå Failed to create assignment"); }
    }
    async function loadAssignments() {
      const list = document.getElementById("assignment-list");
      list.innerHTML = `<div class="skeleton" style="width:60%"></div>`;
      try {
        const res = await fetch("/assignments");
        const data = await res.json();
        if (!Array.isArray(data) || !data.length) {
          list.innerHTML = `<div class="empty"><i data-lucide="clipboard-x"></i> No assignments yet</div>`;
          refreshIcons();
          return;
          console.log(data);

        }
        list.innerHTML = data.map(a => `
          <div class="list-item">
            <strong>${a.title}</strong> ‚Äî due ${new Date(a.deadline).toLocaleDateString()}
            <br><small style="color:var(--muted)">${a.description || ""}</small>
          </div>`).join("");
        refreshIcons();
      } catch {
        list.innerHTML = `<div class="empty"><i data-lucide="alert-triangle"></i> Failed to load assignments</div>`;
        refreshIcons();
      }
    }

    /* ---------- Announcements (logic unchanged) ---------- */
    async function postAnnouncement() {
      const text = document.getElementById("announcementText").value.trim();
      if (!text) return alert("Write something first");
      try {
        const res = await fetch("/announcements", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ text })
        });
        await res.json(); loadAnnouncements();
        document.getElementById("announcementText").value = "";
      } catch { alert("‚ùå Failed to post announcement"); }
    }
    async function loadAnnouncements() {
      const cont = document.getElementById("announcement-list");
      cont.innerHTML = `<div class="skeleton" style="width:72%"></div>`;
      try {
        const res = await fetch("/announcements");
        const data = await res.json();
        if (!Array.isArray(data) || !data.length) {
          cont.innerHTML = `<div class="empty"><i data-lucide="megaphone-off"></i> No announcements yet</div>`;
          refreshIcons();
          return;
        }
        cont.innerHTML = data.map(a => `
          <div class="list-item">
            ${a.text}
            <br><small style="color:var(--muted)">By ${a.createdByName || "Teacher"} ¬∑ ${new Date(a.createdAt).toLocaleString()}</small>
          </div>`).join("");
        refreshIcons();
      } catch {
        cont.innerHTML = `<div class="empty"><i data-lucide="alert-triangle"></i> Failed to load announcements</div>`;
        refreshIcons();
      }
    }
    async function loadSubmissions() {
  const list = document.getElementById("submission-list");
  list.innerHTML = `<div class="skeleton" style="width:70%"></div>`;

  try {
    const res = await fetch("/submissions");
    const data = await res.json();

    if (!Array.isArray(data) || !data.length) {
      list.innerHTML = `<div class="empty"><i data-lucide="inbox"></i> No submissions yet</div>`;
      lucide.createIcons();
      return;
    }

    let html = `<table>
      <thead>
        <tr>
          <th>Student</th>
          <th>Email</th>
          <th>Assignment</th>
          <th>Submitted At</th>
          <th style="text-align:right">File</th>
        </tr>
      </thead>
      <tbody>`;

    data.forEach(sub => {
      html += `
        <tr>
          <td>${sub.studentName}</td>
          <td>${sub.studentEmail}</td>
          <td>${sub.assignmentTitle}</td>
          <td>${new Date(sub.submittedAt).toLocaleString()}</td>
          <td style="text-align:right">
            <a href="${sub.fileUrl}" class="btn-ghost" style="text-decoration:none" target="_blank">
              <i data-lucide="download"></i> Download
            </a>
          </td>
        </tr>`;
    });

    html += `</tbody></table>`;
    list.innerHTML = html;
    lucide.createIcons();
  } catch (err) {
    list.innerHTML = `<div class="empty"><i data-lucide="alert-triangle"></i> Failed to load submissions</div>`;
    lucide.createIcons();
  }
}

// Load on page load
window.onload = function() {
  loadFiles();
  loadAssignments();
  loadAnnouncements();
  loadSubmissions(); 
  lucide.createIcons();
};
  </script>
</body>
</html>
